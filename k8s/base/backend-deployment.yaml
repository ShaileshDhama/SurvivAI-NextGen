apiVersion: apps/v1
kind: Deployment
metadata:
  name: survivai-backend
  labels:
    app: survivai
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: survivai
      component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: survivai
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: backend
        image: ${BACKEND_IMAGE}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: survivai-secrets
              key: database-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: survivai-secrets
              key: openai-api-key
        - name: MODEL_STORAGE_PATH
          value: "/app/data/models"
        - name: DATASET_STORAGE_PATH
          value: "/app/data/datasets"
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow-service:5000"
        volumeMounts:
        - name: model-storage
          mountPath: /app/data/models
        - name: dataset-storage
          mountPath: /app/data/datasets
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc
      - name: dataset-storage
        persistentVolumeClaim:
          claimName: dataset-storage-pvc
