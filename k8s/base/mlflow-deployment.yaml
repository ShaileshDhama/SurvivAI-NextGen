apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    app: survivai
    component: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: survivai
      component: mlflow
  template:
    metadata:
      labels:
        app: survivai
        component: mlflow
    spec:
      containers:
      - name: mlflow
        image: ghcr.io/mlflow/mlflow:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
        command:
        - mlflow
        - server
        - --host=0.0.0.0
        - --port=5000
        - --backend-store-uri=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
        - --default-artifact-root=s3://${S3_BUCKET}/mlflow/artifacts
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: survivai-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: survivai-secrets
              key: postgres-password
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: survivai-config
              key: postgres-host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: survivai-config
              key: postgres-port
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: survivai-config
              key: postgres-db
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: survivai-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: survivai-secrets
              key: aws-secret-access-key
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: survivai-config
              key: s3-bucket
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 5
